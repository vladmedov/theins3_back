services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: always
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - db
    networks:
      - laravel_network
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: theins
      POSTGRES_USER: theins
      POSTGRES_PASSWORD: ith4837wiuesq93r8wgfiub
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - laravel_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
      - legacy_db
    networks:
      - laravel_network

  legacy_db:
    image: postgres:16
    container_name: legacy_db
    restart: always
    environment:
      POSTGRES_DB: theins_legacy
      POSTGRES_USER: theins
      POSTGRES_PASSWORD: ith4837wiuesq93r8wgfiub
    ports:
      - "5433:5432"  # Используем другой порт для внешнего доступа
    volumes:
      - legacy_db_data:/var/lib/postgresql/data
      - ./theins_prod_24032025:/home/theins_prod_24032025
    networks:
      - laravel_network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./nginx/localhost.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/html
    depends_on:
      - app
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  db_data:
  legacy_db_data:
  pgadmin_data: 
